<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>reads on f0rk3b0mb</title>
        <link>https://f0rk3b0mb.github.io/categories/reads/</link>
        <description>Recent content in reads on f0rk3b0mb</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sat, 25 Nov 2023 08:48:38 +0300</lastBuildDate><atom:link href="https://f0rk3b0mb.github.io/categories/reads/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Thm_wazuh</title>
        <link>https://f0rk3b0mb.github.io/p/thm_wazuh/</link>
        <pubDate>Sat, 25 Nov 2023 08:48:38 +0300</pubDate>
        
        <guid>https://f0rk3b0mb.github.io/p/thm_wazuh/</guid>
        <description>&lt;img src="https://f0rk3b0mb.github.io/cover/wazuh.png" alt="Featured image of post Thm_wazuh" /&gt;&lt;h2 id=&#34;wazuh&#34;&gt;Wazuh&lt;/h2&gt;
&lt;p&gt;This is  a writeup of Wazuh module on tryhackme. This is in the SOC Level 1 path.   &amp;raquo; &lt;a class=&#34;link&#34; href=&#34;https://tryhackme.com/room/wazuhct&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;here&lt;/a&gt;
ENjoy :)&lt;/p&gt;
&lt;p&gt;Wazuh is  an opensource XDR and SIEM service&lt;/p&gt;
&lt;h3 id=&#34;intro&#34;&gt;Intro&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;1.  When was Wazuh released?

2015

2. 
What is the term that Wazuh calls a device that is being monitored for suspicious activity and potential security threats?

agent

3.
Lastly, what is the term for a device that is responsible for managing these devices?

manager

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;wazuh-agents&#34;&gt;Wazuh agents&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;1.
How many agents does this Wazuh management server manage?

2

2.
What are the status of the agents managed by this Wazuh management server?

disconnected
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;wazuh-vulnerability-assessment--security-events&#34;&gt;Wazuh Vulnerability Assessment &amp;amp; Security Events&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;1.
How many &amp;#34;Security Event&amp;#34; alerts have been generated by the agent &amp;#34;AGENT-001&amp;#34;?

196
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;collecting-windows-logs-with-wazuh&#34;&gt;Collecting Windows Logs with Wazuh&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;1.
What is the name of the tool that we can use to monitor system events?

sysmon

2.
What standard application on Windows do these system events get recorded to?

event viewer
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;collecting-linux-logs-with-wazuh&#34;&gt;Collecting Linux Logs with Wazuh&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;1.
What is the full file path to the rules located on a Wazuh management server?

/var/ossec/ruleset/rules
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;auditing-commands-on-linux-with-wazuh&#34;&gt;Auditing Commands on Linux with Wazuh&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;1.
What application do we use on Linux to monitor events such as command execution?

auditd

2. 
What is the full path &amp;amp; filename for where the aforementioned application stores rules?

/etc/audit/ruled.d/audit.rules

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;wazuh-api&#34;&gt;Wazuh API&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;1.
What is the name of the standard Linux tool that we can use to make requests to  the Wazuh management server?

curl

2.
What HTTP method would we use to retrieve information for a Wazuh management server API?

GET

3.
What HTTP method would we use to perform an action on a Wazuh management server API?

PUT

4.
Use the API console to find the Wazuh server&amp;#39;s version.

v4.2.5

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;generating-reports-with-wazuh&#34;&gt;Generating Reports with Wazuh&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;1.
Analyse the report. What is the name of the agent that has generated the most alerts?

agent-001

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>Windows events and log analysis</title>
        <link>https://f0rk3b0mb.github.io/p/windows-events-and-log-analysis/</link>
        <pubDate>Mon, 31 Jul 2023 16:18:16 +0300</pubDate>
        
        <guid>https://f0rk3b0mb.github.io/p/windows-events-and-log-analysis/</guid>
        <description>&lt;img src="https://f0rk3b0mb.github.io/cover/windows_logs.avif" alt="Featured image of post Windows events and log analysis" /&gt;&lt;p&gt;Windows event log analysis is an important skill in threat hunting.
These logs silently record system events, security incidents, and user interactions, providing crucial insights into system health and security. In this blog, we will explore the art of Windows Event Log analysis&lt;/p&gt;
&lt;p&gt;Im going to discuss log analysis of windows events in linux, we will be utilizing a tool called chainsaw, you can get it &amp;raquo; &lt;a class=&#34;link&#34; href=&#34;https://github.com/WithSecureLabs/chainsaw&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this tutorial i will be analysing the  files from cybertalents blue scholarship.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;1--chainsaw-search&#34;&gt;1.  chainsaw search&lt;/h3&gt;
&lt;p&gt;an attacker after compromising the machine added a new account as admin. can you find the name of the new account? flag format : flag{md5 of string}&lt;/p&gt;
&lt;p&gt;file &amp;raquo;&amp;raquo; &lt;a class=&#34;link&#34; href=&#34;https://f0rk3b0mb.github.io/files/Security436509324654726509.evtx&#34; &gt;ex1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In windows, each event has a unique event id. So we have to find event id for account creation , a quick google search&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://f0rk3b0mb.github.io/images/windows_logs/event.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;event_id&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Then in chainsaw&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;
./chainsaw/chainsaw-gnu search  -t &lt;span class=&#34;s1&#34;&gt;&amp;#39;Event.System.EventID: =4720&amp;#39;&lt;/span&gt;  Security436509324654726509.evtx

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Here we can filter events with the event id 4720.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://f0rk3b0mb.github.io/images/windows_logs/sam.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;sam&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;SAM means security account manager , it is a database that stores accounts on windows systems. Usename is sam md5hash ba0e0cde1bf72c28d435c89a66afc61a.&lt;/p&gt;
&lt;p&gt;flag{ba0e0cde1bf72c28d435c89a66afc61a}&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2-chainsaw-hunt&#34;&gt;2. chainsaw hunt&lt;/h3&gt;
&lt;p&gt;file &amp;raquo;&amp;raquo; &lt;a class=&#34;link&#34; href=&#34;https://f0rk3b0mb.github.io/files/logs.evtx&#34; &gt;here&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;Our network got compromised two days ago by an unknown attacker, and we need to get an answer &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; the following questions:

1. What is the domain&lt;span class=&#34;s1&#34;&gt;&amp;#39;s SID?
&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;2. The attacker failed to login to some accounts, What is the attacker&amp;#39;&lt;/span&gt;s machine IP address?
3. What is the workstation&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;s name that the attacker was using to authenticate with the administrator account?

Flag format: Flag&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;ANS1_ANS2_ANS3&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Since this is account failed login it has event id 4776 for failed login from domain controller. The domain controller in this case is HYDRA-DC.MARVEL.local.&lt;/p&gt;
&lt;p&gt;Since chainsaw has rules to detect certain events , you can use the folowing command to hunt for events&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;
./chainsaw/chainsaw-gnu hunt -r ./chainsaw/rules/ logs.evtx

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;This returns alot of output , but retuns events in a format we can easily comprehend.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://f0rk3b0mb.github.io/images/windows_logs/format.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;format&#34;
	
	
&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;
./chainsaw/chainsaw-gnu hunt --sigma ./chainsaw/sigma/  --mapping ./chainsaw/mappings/sigma-event-logs-all.yml -r ./chainsaw/rules/lateral_movement/ logs/

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;You can use the command above to get more info.
Now here is where the fun begins.&lt;/p&gt;
&lt;p&gt;From the logs we can see that there are several users lke pbarker,fcasle, Administrator and these avents are have a common ipaddress  &amp;ldquo;192.168.80.128&amp;rdquo;&lt;/p&gt;
&lt;p&gt;If we search for the following users in the sigma output , we can find the sid&lt;/p&gt;
&lt;p&gt;pbarker :   S-1-5-21-271597537-2992796785-3713134209-1105&lt;/p&gt;
&lt;p&gt;fcastle: S-1-5-21-271597537-2992796785-3713134209-1103&lt;/p&gt;
&lt;p&gt;Adminitrator : S-1-5-21-271597537-2992796785-3713134209-500&lt;/p&gt;
&lt;p&gt;The structure of an sid is as follows :&lt;/p&gt;
&lt;p&gt;S-1-5-21-&lt;domain&gt;-&amp;lt;relative_id&amp;gt;&lt;/p&gt;
&lt;p&gt;Where:&lt;/p&gt;
&lt;p&gt;S: A constant prefix indicating that it is a Security Identifier.&lt;/p&gt;
&lt;p&gt;1: Revision number (currently always 1).&lt;/p&gt;
&lt;p&gt;5: Identifier authority value (the identifier authority for Windows is always 5).&lt;/p&gt;
&lt;p&gt;21: The identifier authority&amp;rsquo;s top-level domain identifier. The actual number may vary depending on the Windows version or configuration but is typically 21 for Windows domains.&lt;/p&gt;
&lt;p&gt;&lt;domain&gt;: The SID for the domain. It is a unique value assigned to each domain by the domain controller during domain creation.&lt;/p&gt;
&lt;p&gt;&amp;lt;relative_id&amp;gt;: A relative identifier that uniquely identifies a specific security principal within the domain. For users and groups, this relative ID is usually the RID (Relative Identifier) assigned by the domain controller.&lt;/p&gt;
&lt;p&gt;so in this case domain sid is &amp;ldquo;S-1-5-21-271597537-2992796785-3713134209&amp;rdquo;&lt;/p&gt;
&lt;p&gt;To get the workstation you can ue the command we used earlier to filter events using event id&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;
./chainsaw/chainsaw-gnu search  -t &lt;span class=&#34;s1&#34;&gt;&amp;#39;Event.System.EventID: =4776&amp;#39;&lt;/span&gt;  logs/ &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep -i workstation

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://f0rk3b0mb.github.io/images/windows_logs/workstation.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;workstation&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;workstation: THEPUNISHER&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://f0rk3b0mb.github.io/images/windows_logs/thepunisher.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;workstation&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;flag is Flag{S-1-5-21-271597537-2992796785-3713134209_192.168.80.128_THEPUNISHER}&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Packet analysis using Wireshark</title>
        <link>https://f0rk3b0mb.github.io/p/packet-analysis-using-wireshark/</link>
        <pubDate>Fri, 14 Jul 2023 11:47:02 +0300</pubDate>
        
        <guid>https://f0rk3b0mb.github.io/p/packet-analysis-using-wireshark/</guid>
        <description>&lt;img src="https://f0rk3b0mb.github.io/cover/packet_analysis.avif" alt="Featured image of post Packet analysis using Wireshark" /&gt;&lt;h3 id=&#34;wireshark-packet-analysis-basic&#34;&gt;Wireshark packet analysis (basic)&lt;/h3&gt;
&lt;p&gt;To demonstrate this, I will be analyzing a pcap from bicWC. You can also download this pcap and follow along &amp;raquo; &lt;a class=&#34;link&#34; href=&#34;https://f0rk3b0mb.github.io/files/capture.pcap&#34; &gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can also download this &amp;raquo;  &lt;a class=&#34;link&#34; href=&#34;https://f0rk3b0mb.github.io/files/strom.pcapng&#34; &gt;here&lt;/a&gt;. I will use this pcap to demonstrate how to extract files from captured network traffic.&lt;/p&gt;
&lt;h4 id=&#34;demo-1&#34;&gt;DEMO 1&lt;/h4&gt;
&lt;hr&gt;
&lt;p&gt;How many packets have been captured?&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://f0rk3b0mb.github.io/images/wireshark/Screenshot%20from%202023-03-01%2007-28-48.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;App Screenshot&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;The number of packets is shown at the right bottom of the screenshot above: 1309&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;What is the IP address of the attacker?&lt;/p&gt;
&lt;p&gt;Here we will use the TCP filter in Wireshark as shown below:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://f0rk3b0mb.github.io/images/wireshark/Screenshot%20from%202023-03-01%2008-09-44.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;App Screenshot&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;The IP address is 45.15.156.72&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Which city is the IP address based in?&lt;/p&gt;
&lt;p&gt;We will use an online IP locator tool:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://f0rk3b0mb.github.io/images/wireshark/Screenshot%20from%202023-03-01%2007-37-57.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;App Screenshot&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;The city is Amsterdam&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;How many DNS servers are in the pcap?&lt;/p&gt;
&lt;p&gt;Here we just use the DNS filter in Wireshark:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://f0rk3b0mb.github.io/images/wireshark/Screenshot%20from%202023-03-01%2007-39-57.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;App Screenshot&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;The answer is two. There is one with IP xxx.100 and xxx.101&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;What is the IP of the NTP server?&lt;/p&gt;
&lt;p&gt;Here we will use the NTP filter in Wireshark:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://f0rk3b0mb.github.io/images/wireshark/Screenshot%20from%202023-03-01%2008-09-52.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;App Screenshot&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;The IP address, as you can see above, is 51.145.123.29&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;What machine ID was transmitted to the attacker?&lt;/p&gt;
&lt;p&gt;Here we will follow the TCP stream of one of the requests to the attacker as shown below. This time we will use the IP address filter &lt;code&gt;&amp;lt;ip.addr == 45.15.156.72&amp;gt;&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://f0rk3b0mb.github.io/images/wireshark/Screenshot%20from%202023-03-01%2007-45-38.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;App Screenshot&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;The machine ID is a parameter of the POST request.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;What is the user-agent?&lt;/p&gt;
&lt;p&gt;As you can see from the picture above, the user-agent is &amp;ldquo;x&amp;rdquo;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;What was the MAC address of the compromised machine?&lt;/p&gt;
&lt;p&gt;We just have to double click on one of the TCP packets between the attacker and compromised machine as shown below. The MAC address is on the blue line I have highlighted:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://f0rk3b0mb.github.io/images/wireshark/Screenshot%20from%202023-03-01%2007-50-18.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;App Screenshot&#34;
	
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;What email address is the registrar of the IP address?&lt;/p&gt;
&lt;p&gt;Here we will conduct a WHOIS search on the IP address. To make it even easier, we will combine it with a grep filter for the @ symbol, which is used in email addresses:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://f0rk3b0mb.github.io/images/wireshark/Screenshot%20from%202023-03-01%2007-53-54.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;App Screenshot&#34;
	
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4 id=&#34;demo-2&#34;&gt;DEMO 2&lt;/h4&gt;
&lt;p&gt;Scrolling through the pcap, you can see weird filenames ending in .ts. I googled this and found out that it is a file extension for video files.&lt;/p&gt;
&lt;p&gt;To extract files, you will first have to identify the stream of the files you want to extract. In this case, it&amp;rsquo;s stream 3. Select packet &amp;gt; right click &amp;gt; follow TCP stream.&lt;/p&gt;
&lt;p&gt;You can move through subsequent streams by using the stream buttons:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://f0rk3b0mb.github.io/images/wireshark/stream.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;stream&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;You now have to export the stream to a file. In my case, I called the file filtered.pcapng:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://f0rk3b0mb.github.io/images/wireshark/export.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;export&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;Open the filtered.pcapng in Wireshark. Go to File &amp;gt; Export Objects &amp;gt; HTTP:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://f0rk3b0mb.github.io/images/wireshark/objects.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;objects&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;You can click on each and then save. The resulting files can be opened with any video player. The flag is in WyK2SW5mcYDArna2IlwZ4C4SwDjZ717a5.ts.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The above challenges are a good entry to learning to use Wireshark and understanding networking.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
